apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
kapt {
    correctErrorTypes = true
}
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs"

android {

    def config = rootProject.ext.android

    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            res.srcDirs = [
                    "src/main/res/",
                    "src/main/res/layouts/main_layouts",
                    "src/main/res/layouts/row_layouts",
                    "src/main/res/layouts/other_layouts",
                    "src/main/res"
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    configurations {
        all*.exclude module: 'javax.annotation'
    }

    packagingOptions {
        // Exclude AndroidX version files
        exclude 'META-INF/*.version'
        // Exclude consumer proguard files
        exclude 'META-INF/proguard/*'
        // Exclude the Firebase/Fabric/other random properties files
        exclude '/*.properties'
        exclude 'fabric/*.properties'
        exclude 'META-INF/metadata.kotlin_module'
        exclude 'META-INF/descriptors.kotlin_module'
        exclude 'META-INF/deserialization.kotlin_module'
        exclude 'META-INF/metadata.jvm.kotlin_module'
        exclude 'META-INF/descriptors.jvm.kotlin_module'
        exclude 'META-INF/util.runtime.kotlin_module'
    }
}

dependencies {
    def dependency = rootProject.ext

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation dependency.kotlin
    implementation dependency.supportLibraries
    implementation dependency.extrasLibraries
    implementation dependency.archs
    implementation dependency.network
    implementation dependency.rxJava
    implementation dependency.di

    implementation(dependency.archWorkManager) {
        // We have to exclude this since it wants 1.1.1-rc1 and we're using 1.1.1
        exclude group: 'android.arch.persistence.room', module: 'runtime'
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    debugImplementation dependency.developmentDependencies
    releaseImplementation dependency.releaseDevelopmentDependencies

    testImplementation dependency.test

    kapt dependency.process

}
